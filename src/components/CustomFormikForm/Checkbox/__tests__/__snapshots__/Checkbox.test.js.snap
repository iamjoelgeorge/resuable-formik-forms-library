// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`[Component]: Checkbox should match the Snapshot 1`] = `
<form
  action="#"
  className=""
  onReset={[Function]}
  onSubmit={[Function]}
>
  <div
    className="container "
  >
    <div
      className="container   slideLabel componentHeading"
    >
      <label
        className="label"
        htmlFor="terms"
      >
        terms
      </label>
    </div>
    <div
      className="optionWithTooltip"
    >
      <label
        className="optionLabel"
      >
        <input
          checked={false}
          className="checkboxInput"
          data-testid="checkbox-terms"
          disabled={false}
          formik={
            Object {
              "dirty": false,
              "errors": Object {},
              "getFieldHelpers": [Function],
              "getFieldMeta": [Function],
              "getFieldProps": [Function],
              "handleBlur": [Function],
              "handleChange": [Function],
              "handleReset": [Function],
              "handleSubmit": [Function],
              "initialErrors": Object {},
              "initialStatus": undefined,
              "initialTouched": Object {},
              "initialValues": Object {
                "terms": false,
              },
              "isSubmitting": false,
              "isValid": true,
              "isValidating": false,
              "registerField": [Function],
              "resetForm": [Function],
              "setErrors": [Function],
              "setFieldError": [Function],
              "setFieldTouched": [Function],
              "setFieldValue": [Function],
              "setFormikState": [Function],
              "setStatus": [Function],
              "setSubmitting": [Function],
              "setTouched": [Function],
              "setValues": [Function],
              "status": undefined,
              "submitCount": 0,
              "submitForm": [Function],
              "touched": Object {},
              "unregisterField": [Function],
              "validateField": [Function],
              "validateForm": [Function],
              "validateOnBlur": true,
              "validateOnChange": true,
              "validateOnMount": false,
              "values": Object {
                "terms": false,
              },
            }
          }
          name="terms"
          onBlur={[Function]}
          onChange={[Function]}
          onFocus={[Function]}
          type="checkbox"
          value={false}
        />
        <span
          className="presentationalCheckbox"
        >
          <span
            className="checkboxChecked"
          />
        </span>
        <span
          className="labelSpanElement"
        >
          I accept
        </span>
      </label>
    </div>
    
    
    
  </div>
</form>
`;
